{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golla\\\\OneDrive\\\\Desktop\\\\bhan\\\\Voice-based-Transport-Enquiry-System\\\\voiceenquirysystem\\\\src\\\\Components\\\\VoiceResolver\\\\App.js\";\nimport React from 'react';\nimport Artyom from 'artyom.js';\nimport ArtyomCommandsManager from './ArtyomCommands.js';\nconst Jarvis = new Artyom();\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.startAssistant = () => {\n      // Initialize Artyom and start listening\n      Jarvis.initialize({\n        lang: \"en-GB\",\n        debug: true,\n        continuous: false,\n        // Prevent continuous listening to control duration\n        listen: true\n      }).then(() => {\n        Jarvis.say(\"Voice Assistant is ready and listening\");\n        this.setState({\n          artyomActive: true\n        });\n\n        // Start a timeout to stop listening after 4 seconds\n        const listeningTimeout = setTimeout(() => {\n          this.stopListening();\n        }, 4000); // 4000ms = 4 seconds\n        this.setState({\n          listeningTimeout\n        });\n      }).catch(err => console.error(\"Error initializing Artyom:\", err));\n\n      // Redirect recognized text to `textValue`\n      Jarvis.redirectRecognizedTextOutput((recognizedText, isFinal) => {\n        if (isFinal) {\n          this.setState({\n            textValue: recognizedText\n          });\n          const targetInput = document.getElementById(this.props.id);\n          if (targetInput) {\n            targetInput.value = recognizedText;\n          }\n        }\n      });\n    };\n    this.stopListening = () => {\n      // Stop Artyom from listening after 4 seconds and clear the timeout\n      clearTimeout(this.state.listeningTimeout);\n      Jarvis.dontObey(); // Stop listening\n      this.setState({\n        artyomActive: false\n      });\n      console.log(\"Stopped listening after 4 seconds.\");\n\n      // Reply back with the captured text\n      if (this.state.textValue) {\n        Jarvis.say(\"You said: \".concat(this.state.textValue));\n      } else {\n        Jarvis.say(\"I couldn't hear anything. Please try again.\");\n      }\n    };\n    this.stopAssistant = () => {\n      // Fully stop the assistant and clear any timeouts\n      clearTimeout(this.state.listeningTimeout);\n      Jarvis.fatality().then(() => this.setState({\n        artyomActive: false\n      }));\n    };\n    this.state = {\n      artyomActive: false,\n      textValue: '',\n      listeningTimeout: null\n    };\n    this.CommandsManager = new ArtyomCommandsManager(Jarvis);\n    this.CommandsManager.loadCommands();\n  }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: this.props.id,\n      value: this.state.textValue,\n      style: {\n        width: \"200px\",\n        height: \"auto\"\n      },\n      placeholder: \"Speak here...\",\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.startAssistant,\n      disabled: this.state.artyomActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Start Voice\"), React.createElement(\"button\", {\n      onClick: this.stopAssistant,\n      disabled: !this.state.artyomActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Stop Voice\"));\n  }\n}","map":{"version":3,"names":["React","Artyom","ArtyomCommandsManager","Jarvis","App","Component","constructor","props","startAssistant","initialize","lang","debug","continuous","listen","then","say","setState","artyomActive","listeningTimeout","setTimeout","stopListening","catch","err","console","error","redirectRecognizedTextOutput","recognizedText","isFinal","textValue","targetInput","document","getElementById","id","value","clearTimeout","state","dontObey","log","concat","stopAssistant","fatality","CommandsManager","loadCommands","render","createElement","__source","fileName","_jsxFileName","lineNumber","__self","style","width","height","placeholder","readOnly","onClick","disabled"],"sources":["C:/Users/golla/OneDrive/Desktop/bhan/Voice-based-Transport-Enquiry-System/voiceenquirysystem/src/Components/VoiceResolver/App.js"],"sourcesContent":["import React from 'react';\r\nimport Artyom from 'artyom.js';\r\nimport ArtyomCommandsManager from './ArtyomCommands.js';\r\n\r\nconst Jarvis = new Artyom();\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      artyomActive: false,\r\n      textValue: '',\r\n      listeningTimeout: null,\r\n    };\r\n    this.CommandsManager = new ArtyomCommandsManager(Jarvis);\r\n    this.CommandsManager.loadCommands();\r\n  }\r\n\r\n  startAssistant = () => {\r\n    // Initialize Artyom and start listening\r\n    Jarvis.initialize({\r\n      lang: \"en-GB\",\r\n      debug: true,\r\n      continuous: false, // Prevent continuous listening to control duration\r\n      listen: true\r\n    }).then(() => {\r\n      Jarvis.say(\"Voice Assistant is ready and listening\");\r\n      this.setState({ artyomActive: true });\r\n\r\n      // Start a timeout to stop listening after 4 seconds\r\n      const listeningTimeout = setTimeout(() => {\r\n        this.stopListening();\r\n      }, 4000); // 4000ms = 4 seconds\r\n      this.setState({ listeningTimeout });\r\n    }).catch(err => console.error(\"Error initializing Artyom:\", err));\r\n\r\n    // Redirect recognized text to `textValue`\r\n    Jarvis.redirectRecognizedTextOutput((recognizedText, isFinal) => {\r\n      if (isFinal) {\r\n        this.setState({ textValue: recognizedText });\r\n        const targetInput = document.getElementById(this.props.id);\r\n        if (targetInput) {\r\n          targetInput.value = recognizedText;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  stopListening = () => {\r\n    // Stop Artyom from listening after 4 seconds and clear the timeout\r\n    clearTimeout(this.state.listeningTimeout);\r\n    Jarvis.dontObey(); // Stop listening\r\n    this.setState({ artyomActive: false });\r\n    console.log(\"Stopped listening after 4 seconds.\");\r\n\r\n    // Reply back with the captured text\r\n    if (this.state.textValue) {\r\n      Jarvis.say(`You said: ${this.state.textValue}`);\r\n    } else {\r\n      Jarvis.say(\"I couldn't hear anything. Please try again.\");\r\n    }\r\n  }\r\n\r\n  stopAssistant = () => {\r\n    // Fully stop the assistant and clear any timeouts\r\n    clearTimeout(this.state.listeningTimeout);\r\n    Jarvis.fatality().then(() => this.setState({ artyomActive: false }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <textarea\r\n          id={this.props.id}\r\n          value={this.state.textValue}\r\n          style={{ width: \"200px\", height: \"auto\" }}\r\n          placeholder=\"Speak here...\"\r\n          readOnly\r\n        />\r\n        <button onClick={this.startAssistant} disabled={this.state.artyomActive}>Start Voice</button>\r\n        <button onClick={this.stopAssistant} disabled={!this.state.artyomActive}>Stop Voice</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,qBAAqB,MAAM,qBAAqB;AAEvD,MAAMC,MAAM,GAAG,IAAIF,MAAM,CAAC,CAAC;AAE3B,eAAe,MAAMG,GAAG,SAASJ,KAAK,CAACK,SAAS,CAAC;EAC/CC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAUfC,cAAc,GAAG,MAAM;MACrB;MACAL,MAAM,CAACM,UAAU,CAAC;QAChBC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,IAAI;QACXC,UAAU,EAAE,KAAK;QAAE;QACnBC,MAAM,EAAE;MACV,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QACZX,MAAM,CAACY,GAAG,CAAC,wCAAwC,CAAC;QACpD,IAAI,CAACC,QAAQ,CAAC;UAAEC,YAAY,EAAE;QAAK,CAAC,CAAC;;QAErC;QACA,MAAMC,gBAAgB,GAAGC,UAAU,CAAC,MAAM;UACxC,IAAI,CAACC,aAAa,CAAC,CAAC;QACtB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QACV,IAAI,CAACJ,QAAQ,CAAC;UAAEE;QAAiB,CAAC,CAAC;MACrC,CAAC,CAAC,CAACG,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC,CAAC;;MAEjE;MACAnB,MAAM,CAACsB,4BAA4B,CAAC,CAACC,cAAc,EAAEC,OAAO,KAAK;QAC/D,IAAIA,OAAO,EAAE;UACX,IAAI,CAACX,QAAQ,CAAC;YAAEY,SAAS,EAAEF;UAAe,CAAC,CAAC;UAC5C,MAAMG,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,IAAI,CAACxB,KAAK,CAACyB,EAAE,CAAC;UAC1D,IAAIH,WAAW,EAAE;YACfA,WAAW,CAACI,KAAK,GAAGP,cAAc;UACpC;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDN,aAAa,GAAG,MAAM;MACpB;MACAc,YAAY,CAAC,IAAI,CAACC,KAAK,CAACjB,gBAAgB,CAAC;MACzCf,MAAM,CAACiC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACnB,IAAI,CAACpB,QAAQ,CAAC;QAAEC,YAAY,EAAE;MAAM,CAAC,CAAC;MACtCM,OAAO,CAACc,GAAG,CAAC,oCAAoC,CAAC;;MAEjD;MACA,IAAI,IAAI,CAACF,KAAK,CAACP,SAAS,EAAE;QACxBzB,MAAM,CAACY,GAAG,cAAAuB,MAAA,CAAc,IAAI,CAACH,KAAK,CAACP,SAAS,CAAE,CAAC;MACjD,CAAC,MAAM;QACLzB,MAAM,CAACY,GAAG,CAAC,6CAA6C,CAAC;MAC3D;IACF,CAAC;IAAA,KAEDwB,aAAa,GAAG,MAAM;MACpB;MACAL,YAAY,CAAC,IAAI,CAACC,KAAK,CAACjB,gBAAgB,CAAC;MACzCf,MAAM,CAACqC,QAAQ,CAAC,CAAC,CAAC1B,IAAI,CAAC,MAAM,IAAI,CAACE,QAAQ,CAAC;QAAEC,YAAY,EAAE;MAAM,CAAC,CAAC,CAAC;IACtE,CAAC;IA1DC,IAAI,CAACkB,KAAK,GAAG;MACXlB,YAAY,EAAE,KAAK;MACnBW,SAAS,EAAE,EAAE;MACbV,gBAAgB,EAAE;IACpB,CAAC;IACD,IAAI,CAACuB,eAAe,GAAG,IAAIvC,qBAAqB,CAACC,MAAM,CAAC;IACxD,IAAI,CAACsC,eAAe,CAACC,YAAY,CAAC,CAAC;EACrC;EAqDAC,MAAMA,CAAA,EAAG;IACP,OACE3C,KAAA,CAAA4C,aAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;MAAA;MAAAC,MAAA;IAAA,GACEjD,KAAA,CAAA4C,aAAA;MACEZ,EAAE,EAAE,IAAI,CAACzB,KAAK,CAACyB,EAAG;MAClBC,KAAK,EAAE,IAAI,CAACE,KAAK,CAACP,SAAU;MAC5BsB,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAO,CAAE;MAC1CC,WAAW,EAAC,eAAe;MAC3BC,QAAQ;MAAAT,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;MAAA;MAAAC,MAAA;IAAA,CACT,CAAC,EACFjD,KAAA,CAAA4C,aAAA;MAAQW,OAAO,EAAE,IAAI,CAAC/C,cAAe;MAACgD,QAAQ,EAAE,IAAI,CAACrB,KAAK,CAAClB,YAAa;MAAA4B,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;MAAA;MAAAC,MAAA;IAAA,GAAC,aAAmB,CAAC,EAC7FjD,KAAA,CAAA4C,aAAA;MAAQW,OAAO,EAAE,IAAI,CAAChB,aAAc;MAACiB,QAAQ,EAAE,CAAC,IAAI,CAACrB,KAAK,CAAClB,YAAa;MAAA4B,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;MAAA;MAAAC,MAAA;IAAA,GAAC,YAAkB,CACxF,CAAC;EAEV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}